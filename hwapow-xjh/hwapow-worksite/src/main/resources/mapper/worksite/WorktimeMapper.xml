<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hwapow.worksite.mapper.WorktimeMapper">

    <resultMap type="Worktime" id="WorktimeResult">
        <result property="id"    column="id"    />
        <result property="worker"    column="worker"    />
        <result property="workerName"    column="worker_name"    />
        <result property="worksite"    column="worksite"    />
        <result property="worksiteName"    column="worksite_name"    />
        <result property="basicWage"    column="basic_wage"    />
        <result property="taskTime"    column="task_time"    />
        <result property="content"    column="content"    />
        <result property="workDate"    column="work_date"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectWorktimeVo">
        select a.*,b.name as worker_name,c.name as worksite_name from worktime a left join worker b on a.worker=b.id left join worksite c on a.worksite=c.id
    </sql>

    <select id="selectWorktimeList" parameterType="Worktime" resultMap="WorktimeResult">
        <include refid="selectWorktimeVo"/>
        <where>
            <if test="worker != null "> and a.worker = #{worker}</if>
            <if test="worksite != null "> and a.worksite = #{worksite}</if>
            <if test="basicWage != null "> and basic_wage = #{basicWage}</if>
            <if test="workDate != null "> and work_date = #{workDate}</if>
            and (a.del_flag = 0 or a.del_flag is null)
        </where>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by work_Date desc,c.name desc,b.name desc
    </select>

    <select id="selectWorktimeById" parameterType="Long" resultMap="WorktimeResult">
        <include refid="selectWorktimeVo"/>
        where a.id = #{id}
    </select>

    <insert id="insertWorktime" parameterType="Worktime" useGeneratedKeys="true" keyProperty="id">
        insert into worktime
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="worker != null">worker,</if>
            <if test="worksite != null">worksite,</if>
            <if test="basicWage != null">basic_wage,</if>
            <if test="taskTime != null">task_time,</if>
            <if test="content != null">content,</if>
            <if test="workDate != null">work_date,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="userId != null">user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="worker != null">#{worker},</if>
            <if test="worksite != null">#{worksite},</if>
            <if test="basicWage != null">#{basicWage},</if>
            <if test="taskTime != null">#{taskTime},</if>
            <if test="content != null">#{content},</if>
            <if test="workDate != null">#{workDate},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="userId != null">#{userId},</if>
         </trim>
    </insert>

    <update id="updateWorktime" parameterType="Worktime">
        update worktime
        <trim prefix="SET" suffixOverrides=",">
            <if test="worker != null">worker = #{worker},</if>
            <if test="worksite != null">worksite = #{worksite},</if>
            <if test="basicWage != null">basic_wage = #{basicWage},</if>
            <if test="taskTime != null">task_time = #{taskTime},</if>
            <if test="content != null">content = #{content},</if>
            <if test="workDate != null">work_date = #{workDate},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="deleteWorktimeById" parameterType="Long">
        update worktime set del_flag=2 where id = #{id}
    </update>

    <update id="deleteWorktimeByIds" parameterType="String">
        update worktime set del_flag=2 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="checkWorktimeUnique"  resultMap="WorktimeResult">
        <include refid="selectWorktimeVo"/>
        where (a.worker = #{worker} and a.work_date = #{workDate}) and (a.del_flag is null or a.del_flag = '0') and user_id = #{userId} limit 1
    </select>

    <select id="getLastDay" resultType="Date">
        select MAX(work_date) from worktime where (del_flag = 0 or del_flag is null) and user_id = #{userId}
    </select>

    <select id="countAllYear" resultType="java.util.Map">
        select work_year,worker,worker_name,sum(task_time) as task_time,sum(wage) as wage from v_worktime where work_year=#{year} and user_id = #{userId} GROUP BY worker
         order by CONVERT( worker_name USING gbk ) COLLATE gbk_chinese_ci ASC
    </select>

    <select id="countAllMonth" resultType="java.util.Map">
        select work_month,worker,worker_name,sum(task_time) as task_time,sum(wage) as wage from v_worktime where work_month=#{month} and user_id = #{userId} GROUP BY worker
         order by CONVERT( worker_name USING gbk ) COLLATE gbk_chinese_ci ASC
    </select>

    <select id="countAllDay" resultType="java.util.Map">
        select work_date,worker,worker_name,sum(task_time) as task_time,sum(wage) as wage from v_worktime where work_date=#{day} and user_id = #{userId} GROUP BY worker
         order by CONVERT( worker_name USING gbk ) COLLATE gbk_chinese_ci ASC
    </select>

    <select id="countOneMonth" resultType="java.util.Map">
        select worker,worker_name,work_date,task_time,wage as wage from v_worktime where work_month=#{month} and worker=#{worker} and user_id = #{userId} order by work_date asc
    </select>

    <select id="countOneYear" resultType="java.util.Map">
        select worker,worker_name,work_month,sum(task_time) as task_time,sum(wage) as wage from v_worktime where work_year=#{year} and worker=#{worker} and user_id = #{userId} group by work_month order by work_month asc
    </select>
</mapper>
